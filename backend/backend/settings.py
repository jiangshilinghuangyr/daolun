"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os

from pathlib import Path
from corsheaders.apps import CorsHeadersAppConfig

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-9ebmwgac7#@vxprary22_&%)%k=rs_6p07b18qjjz=2iq0we6e'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [ ]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'web.apps.BlogConfig',
    'corsheaders',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',             # 安全中间件，应放在最前面
    'django.contrib.sessions.middleware.SessionMiddleware',     # 会话中间件，必须紧跟在安全中间件后
    'corsheaders.middleware.CorsMiddleware',  # 跨域中间件，通常放在 CSRF 中间件之前
    'django.middleware.common.CommonMiddleware',                # 常见中间件，可以放在这之后
    # 'django.middleware.csrf.CsrfViewMiddleware',                # CSRF 中间件，应放在认证和跨域之后
    'django.contrib.auth.middleware.AuthenticationMiddleware',   # 认证中间件，必须在会话中间件之后
    'django.contrib.messages.middleware.MessageMiddleware',     # 消息中间件
    'django.middleware.clickjacking.XFrameOptionsMiddleware',   # 点击劫持保护中间件
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "daolun",
        "USER": "root",
        "PASSWORD": "..732jlxx",
        "HOST": "127.0.0.1",
        "PORT": "3306",
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR,'static')

STATIC_URL = 'static/'

MEDIA_URL = 'media/'

MEDIA_ROOT = os.path.join(BASE_DIR,'web/media/image')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ORIGIN_WHITELIST = ("http://localhost:8081",)

CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_HEADERS = ("*")

CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'OPTIONS',  # 允许预检请求
    'PUT',
    'PATCH',
    'DELETE',
]

# 设置会话存储后端
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # 默认数据库存储

# 会话的超时时间（秒）
SESSION_COOKIE_AGE = 1209600  # 2周

# 关闭浏览器是否删除会话
SESSION_EXPIRE_AT_BROWSER_CLOSE = False

# 是否只通过HTTPS发送会话cookie
SESSION_COOKIE_SECURE = False

# 在settings.py中配置以下内容：
SESSION_COOKIE_NAME = 'sessionid'  # 会话Cookie的名称，默认值为 'sessionid'

SESSION_COOKIE_SECURE = False  # 设置为True时，必须使用HTTPS连接

SESSION_COOKIE_HTTPONLY = True  # 禁止通过JavaScript访问Cookie

SESSION_COOKIE_SAMESITE = 'Lax'  # 防止CSRF攻击的设置（'Strict', 'Lax', 或 'None'）

SESSION_COOKIE_SAMESITE = 'None'
